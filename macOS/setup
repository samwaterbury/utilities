#!/usr/bin/env bash
#
# Describes my steps to get a fresh macOS installation up and running.
#
# Before running this script, make sure that Xcode is installed.
#
# Usage: ./setup

#################
# Initial Setup #
#################

# TODO: check if Xcode CLT are installed and if not, install them
set -e # Until this is working, exit when any command doesn't run correctly
## xcode-select --install
## sudo xcodebuild -license
## sudo installer -pkg /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.*.pkg -target /

# Switch between the tools provided by Xcode and CLT with:
## sudo xcode-select --switch /Library/Developer/CommandLineTools
## sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer

# SSH setup
[ ! -f "$HOME/.ssh/id_rsa" ] \
    && ssh-keygen -b 4096 -t rsa -f "$HOME/.ssh/id_rsa" -q -N ""

# Git setup
git config --global user.name "Sam Waterbury"
git config --global user.email "samwaterbury1@gmail.com"
git config --global commit.gpgsign true
git config --global gpg.program "/usr/local/bin/gpg"
git config --global init.defaultBranch "main"

# (Add private SSH key and GPG key to GitHub account)
# GPG Tutorial: https://help.github.com/articles/generating-a-new-gpg-key/

# Make the directory I keep repositories in and clone this repo
mkdir -p "$HOME/Projects"
[ ! -d "$HOME/Projects/utilities" ] \
    && git clone "git@github.com:samwaterbury/utilities.git" "$HOME/Projects/utilities"

# Terminal configuration
touch "$HOME/.hushlogin"
cp "$HOME/Projects/utilities/macOS/dotfiles/.bash_profile" "$HOME/.bash_profile"
cp "$HOME/Projects/utilities/macOS/dotfiles/.inputrc" "$HOME/.inputrc"

############
# Software #
############

# Install Homebrew package manager
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
brew update

# Install brew packages
brew install \
    apache-arrow \
    aws-iam-authenticator \
    bash \
    bash-completion \
    cmake \
    colordiff \
    fd \
    gcc \
    git \
    github/gh/gh \
    gpg \
    java \
    jq \
    neofetch \
    neovim \
    node \
    openblas \
    openssl \
    pandoc \
    pinentry-mac \
    python \
    r \
    ruby \
    speedtest-cli \
    sqlite3 \
    thefuck \
    tmux \
    trash \
    tree \
    unar \
    watch \
    wget \
    xsv \
    zellij

# Install brew casks
brew install --cask \
    alacritty \
    balenaetcher \
    bat \
    brooklyn \
    cowsay \
    discord \
    docker \
    firefox \
    fortune \
    google-chrome \
    homebrew/cask-fonts/font-fira-code \
    ipvanish-vpn \
    julia \
    lolcat \
    mactex \
    miniconda \
    mongodb-compass \
    rstudio \
    slack \
    spotify \
    steam \
    terraform \
    texpad \
    the-unarchiver \
    transmission \
    tuxguitar \
    typora \
    visual-studio-code \
    vlc \
    zoom

# Configure Alacritty
mkdir -p "$HOME/.config/alacritty"
cp "$HOME/Projects/utilities/macOS/alacritty/alacritty.yml" "$HOME/.config/alacritty/alacritty.yml"

# Configure Zellij
mkdir -p "$HOME/.config/zellij/layouts"
cp "$HOME/Projects/utilities/macOS/zellij/config.yaml" "$HOME/.config/zellij/config.yaml"
cp "$HOME/Projects/utilities/macOS/zellij/layouts/default.yaml" "$HOME/.config/zellij/layouts/default.yaml"

# Configure Neovim and its plugin manager
sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
mkdir -p "$HOME/.config/nvim"
cp "$HOME/Projects/utilities/Neovim/init.vim" "$HOME/.config/nvim/init.vim"

# Move PIP configuration file
mkdir -p "$HOME/.config/pip"
ln -s "$HOME/Projects/utilities/Python/pip.conf" "$HOME/.config/pip/pip.conf"

# Tell conda not to automatically activate the base environment in new terminals
conda config --set auto_activate_base false

# VS Code configuration
sh "$HOME/Projects/utilities/VS Code/setup"

# Terraform autocomplete
terraform -install-autocomplete
