#!/usr/bin/env bash
#
# Describes my steps to get a fresh Ubuntu 20.04 installation up and running.
#
# Usage: ./setup

#################
# Initial Setup #
#################

# SSH setup
apt-get install --yes openssh-client openssh-server \
    && [ ! -f "$HOME/.ssh/id_rsa" ] \
    && ssh-keygen -b 4096 -t rsa -f "$HOME/.ssh/id_rsa" -q -N ""

# Git setup
apt-get install --yes git \
    && git config --global user.name "Sam Waterbury" \
    && git config --global user.email "samwaterbury1@gmail.com" \
    && git config --global commit.gpgsign true
# (Add private SSH key and GPG key to GitHub account)
# GPG Tutorial: https://help.github.com/articles/generating-a-new-gpg-key/

# Make the directory I keep repositories in and clone this repo
mkdir -p "$HOME/Projects" \
    && [ ! -d "$HOME/Projects/utilities" ] \
    && git clone "git@github.com:samwaterbury/utilities.git" \
        "$HOME/Projects/utilities"

# Terminal configuration
cp "$HOME/Projects/utilities/Ubuntu/dotfiles/.bashrc" "$HOME/.bashrc"
cp "$HOME/Projects/utilities/Ubuntu/dotfiles/.inputrc" "$HOME/.inputrc"

############
# Software #
############

# Repositories
add-apt-repository --yes ppa:deadsnakes/ppa
apt-get update

# Start adding packages
apt-get install --yes \
    cmake \
    curl \
    colordiff \
    docker-compose \
    firefox \
    fonts-firacode \
    gdebi \
    gnome-tweaks \
    gparted \
    neovim \
    net-tools \
    npm \
    ppa-purge \
    python3.10 \
    snapd \
    software-properties-common \
    speedtest-cli \
    steam \
    thefuck \
    thunderbird \
    transmission \
    tree \
    vim \
    virtualbox \
    vlc

# Vim
sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
mkdir -p "$HOME/.config/nvim"
cp "$HOME/Projects/utilities/Neovim/init.vim" "$HOME/.config/nvim/init.vim"

# Snap packages
snap install spotify discord
snap install --classic code

# Rust language
curl --proto "=https" --tlsv1.2 -sSf https://sh.rustup.rs \
    | bash -s -- -y --no-modify-path

# Miniconda
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh \
    && sh miniconda.sh -b \
    && rm miniconda.sh

# Configure Docker to run without sudo
curl -fsSL https://get.docker.com/rootless | sh \
    && systemctl --user start docker \
    && loginctl enable-linger $(whoami)

# Add Python symlinks
sudo ln -s  $(which python3.10) /usr/local/bin/python
sudo ln -s  $(which python3.10) /usr/local/bin/python3
